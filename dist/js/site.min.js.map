{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/smoothscroll/smoothscroll.js","source/js/components/events.js","source/js/components/header.js","source/js/logger.js","source/js/main.js"],"names":[],"mappingsvHA,IAAM,WAAW,iBAAjB;AACA,IAAM,UAAU;AACd,QAAM;AADQ,CAAhB;AAGA,IAAM,gBAAgB;AACpB,UAAQ;AADY,CAAtB;;AAIA,IAAM,OAAO,SAAP,IAAO,GAAM;AACf,MAAM,SAAS,SAAS,gBAAT,CAA0B,QAA1B,CAAf;;AAEA,KAAG,OAAH,CAAW,IAAX,CAAgB,MAAhB,EAAwB,UAAC,KAAD,EAAW;AACjC,QAAM,SAAS,MAAM,aAAN,CAAoB,cAAc,MAAlC,CAAf;AACA,QAAI,MAAJ,EAAY;AACV,aAAO,gBAAP,CAAwB,OAAxB,EAAiC,UAAC,CAAD,EAAO;AACtC,YAAM,OAAO,MAAM,SAAN,CAAgB,MAAhB,CAAuB,QAAQ,IAA/B,CAAb;AACA,UAAE,cAAF;AACD,OAHD;AAID;AACF,GARD;AASH,CAZD;;QAiBE,I,GAAA,I;;;;;;;;AC1BF,IAAM,SAAS,EAAf;AACA,IAAM,WAAW,kBAAjB;AACA,IAAM,UAAU;AACd,YAAU;AADI,CAAhB;;AAIA,IAAM,OAAO,SAAP,IAAO,GAAM;AACf,MAAM,SAAS,SAAS,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAM,iBAAiB,SAAjB,cAAiB,GAAM;AAC3B,QAAM,YAAY,SAAS,IAAT,CAAc,SAAd,IAA2B,SAAS,eAAT,CAAyB,SAAtE;AACA,QAAI,YAAY,MAAhB,EAAwB;AACtB,aAAO,SAAP,CAAiB,GAAjB,CAAqB,QAAQ,QAA7B;AACD,KAFD,MAEO;AACL,aAAO,SAAP,CAAiB,MAAjB,CAAwB,QAAQ,QAAhC;AACD;AACF,GAPD;AAQA;AACA,SAAO,gBAAP,CAAwB,QAAxB,EAAkC,cAAlC;AACH,CAZD;;QAiBE,I,GAAA,I;;;;;;;;ACvBF,IAAM,MAAM,SAAN,GAAM,CAAC,CAAD,EAAO;AACjB,UAAQ,GAAR,CAAY,CAAZ;AACD,CAFD;;QAME,G,GAAA,G;;;;;ACNF;;AACA;;AACA;;AACA;;;;;;AAEA,iBAAI,aAAJ;AACA,IAAM,wBAAwB,SAAxB,qBAAwB,GAAM;AAClC,MAAM,QAAQ,SAAS,gBAAT,CAA0B,cAA1B,CAAd;AACA,KAAG,OAAH,CAAW,IAAX,CAAgB,KAAhB,EAAuB,UAAC,IAAD,EAAU;AAC/B,SAAK,gBAAL,CAAsB,OAAtB,EAA+B,UAAC,CAAD,EAAO;AACpC,QAAE,cAAF;AACA,UAAM,iBAAiB,KAAK,IAA5B;AACA,UAAM,SAAS,SAAS,aAAT,CAAuB,cAAvB,CAAf;AACA,cAAQ,GAAR,CAAY,sBAAZ;AACA,kCAAa,MAAb;AACD,KAND;AAOD,GARD;AASD,CAXD;;AAaA;AACA;AACA;AACA","file":"site.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function (root, smoothScroll) {\n  'use strict';\n\n  // Support RequireJS and CommonJS/NodeJS module formats.\n  // Attach smoothScroll to the `window` when executed as a <script>.\n\n  // RequireJS\n  if (typeof define === 'function' && define.amd) {\n    define(smoothScroll);\n\n  // CommonJS\n  } else if (typeof exports === 'object' && typeof module === 'object') {\n    module.exports = smoothScroll();\n\n  } else {\n    root.smoothScroll = smoothScroll();\n  }\n\n})(this, function(){\n'use strict';\n\n// Do not initialize smoothScroll when running server side, handle it in client:\nif (typeof window !== 'object') return;\n\n// We do not want this script to be applied in browsers that do not support those\n// That means no smoothscroll on IE9 and below.\nif(document.querySelectorAll === void 0 || window.pageYOffset === void 0 || history.pushState === void 0) { return; }\n\n// Get the top position of an element in the document\nvar getTop = function(element, start) {\n    // return value of html.getBoundingClientRect().top ... IE : 0, other browsers : -pageYOffset\n    if(element.nodeName === 'HTML') return -start\n    return element.getBoundingClientRect().top + start\n}\n// ease in out function thanks to:\n// http://blog.greweb.fr/2012/02/bezier-curve-based-easing-functions-from-concept-to-implementation/\nvar easeInOutCubic = function (t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1 }\n\n// calculate the scroll position we should be in\n// given the start and end point of the scroll\n// the time elapsed from the beginning of the scroll\n// and the total duration of the scroll (default 500ms)\nvar position = function(start, end, elapsed, duration) {\n    if (elapsed > duration) return end;\n    return start + (end - start) * easeInOutCubic(elapsed / duration); // <-- you can change the easing funtion there\n    // return start + (end - start) * (elapsed / duration); // <-- this would give a linear scroll\n}\n\n// we use requestAnimationFrame to be called by the browser before every repaint\n// if the first argument is an element then scroll to the top of this element\n// if the first argument is numeric then scroll to this location\n// if the callback exist, it is called when the scrolling is finished\n// if context is set then scroll that element, else scroll window\nvar smoothScroll = function(el, duration, callback, context){\n    duration = duration || 500;\n    context = context || window;\n    var start = context.scrollTop || window.pageYOffset;\n\n    if (typeof el === 'number') {\n      var end = parseInt(el);\n    } else {\n      var end = getTop(el, start);\n    }\n\n    var clock = Date.now();\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame ||\n        function(fn){window.setTimeout(fn, 15);};\n\n    var step = function(){\n        var elapsed = Date.now() - clock;\n        if (context !== window) {\n          context.scrollTop = position(start, end, elapsed, duration);\n        }\n        else {\n          window.scroll(0, position(start, end, elapsed, duration));\n        }\n\n        if (elapsed > duration) {\n            if (typeof callback === 'function') {\n                callback(el);\n            }\n        } else {\n            requestAnimationFrame(step);\n        }\n    }\n    step();\n}\n\nvar linkHandler = function(ev) {\n    if (!ev.defaultPrevented) {\n        ev.preventDefault();\n\n        if (location.hash !== this.hash) window.history.pushState(null, null, this.hash)\n        // using the history api to solve issue #1 - back doesn't work\n        // most browser don't update :target when the history api is used:\n        // THIS IS A BUG FROM THE BROWSERS.\n        // change the scrolling duration in this call\n        var node = document.getElementById(this.hash.substring(1))\n        if (!node) return; // Do not scroll to non-existing node\n\n        smoothScroll(node, 500, function (el) {\n            location.replace('#' + el.id)\n            // this will cause the :target to be activated.\n        });\n    }\n}\n\n// We look for all the internal links in the documents and attach the smoothscroll function\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var internal = document.querySelectorAll('a[href^=\"#\"]:not([href=\"#\"])'), a;\n    for(var i=internal.length; a=internal[--i];){\n        a.addEventListener(\"click\", linkHandler, false);\n    }\n});\n\n// return smoothscroll API\nreturn smoothScroll;\n\n});\n","\nconst selector = '[data-js-event]';\nconst CLASSES = {\n  more: 'aa-event--more',\n}\nconst DOM_SELECTORS = {\n  toggle: '.aa-event__toggle-more'\n}\n\nconst init = () => {\n    const events = document.querySelectorAll(selector);\n\n    [].forEach.call(events, (event) => {\n      const toggle = event.querySelector(DOM_SELECTORS.toggle);\n      if (toggle) {\n        toggle.addEventListener('click', (e) => {\n          const more = event.classList.toggle(CLASSES.more);\n          e.preventDefault();\n        });\n      }\n    })\n}\n\n\n\nexport {\n  init,\n}\n","const OFFSET = 10;\nconst selector = '[data-js-header]';\nconst CLASSES = {\n  scrolled: 'aa-header--scrolled',\n}\n\nconst init = () => {\n    const header = document.querySelector(selector);\n    const setHeaderState = () => {\n      const scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n      if (scrollTop > OFFSET) {\n        header.classList.add(CLASSES.scrolled)\n      } else {\n        header.classList.remove(CLASSES.scrolled);\n      }\n    }\n    setHeaderState();\n    window.addEventListener('scroll', setHeaderState);\n}\n\n\n\nexport {\n  init,\n}\n","const log = (s) => {\n  console.log(s);\n};\n\n\nexport {\n  log\n}\n","import {log} from './logger';\nimport {init as initHeader} from './components/header';\nimport {init as initEvents} from './components/events';\nimport smoothScroll from 'smoothscroll';\n\nlog('Hello World');\nconst initSmoothScrollLinks = () => {\n  const links = document.querySelectorAll('a[href^=\"#\"]');\n  [].forEach.call(links, (link) => {\n    link.addEventListener('click', (e) => {\n      e.preventDefault();\n      const targetSelector = link.hash;\n      const target = document.querySelector(targetSelector);\n      console.log(smoothScroll);\n      smoothScroll(target);\n    })\n  })\n}\n\ninitHeader();\ninitSmoothScrollLinks();\ninitSmoothScrollLinks();\ninitEvents();\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvc21vb3Roc2Nyb2xsL3Ntb290aHNjcm9sbC5qcyIsInNvdXJjZS9qcy9jb21wb25lbnRzL2V2ZW50cy5qcyIsInNvdXJjZS9qcy9jb21wb25lbnRzL2hlYWRlci5qcyIsInNvdXJjZS9qcy9sb2dnZXIuanMiLCJzb3VyY2UvanMvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQ3ZIQSxJQUFNLFdBQVcsaUJBQWpCO0FBQ0EsSUFBTSxVQUFVO0FBQ2QsUUFBTTtBQURRLENBQWhCO0FBR0EsSUFBTSxnQkFBZ0I7QUFDcEIsVUFBUTtBQURZLENBQXRCOztBQUlBLElBQU0sT0FBTyxTQUFQLElBQU8sR0FBTTtBQUNmLE1BQU0sU0FBUyxTQUFTLGdCQUFULENBQTBCLFFBQTFCLENBQWY7O0FBRUEsS0FBRyxPQUFILENBQVcsSUFBWCxDQUFnQixNQUFoQixFQUF3QixVQUFDLEtBQUQsRUFBVztBQUNqQyxRQUFNLFNBQVMsTUFBTSxhQUFOLENBQW9CLGNBQWMsTUFBbEMsQ0FBZjtBQUNBLFFBQUksTUFBSixFQUFZO0FBQ1YsYUFBTyxnQkFBUCxDQUF3QixPQUF4QixFQUFpQyxVQUFDLENBQUQsRUFBTztBQUN0QyxZQUFNLE9BQU8sTUFBTSxTQUFOLENBQWdCLE1BQWhCLENBQXVCLFFBQVEsSUFBL0IsQ0FBYjtBQUNBLFVBQUUsY0FBRjtBQUNELE9BSEQ7QUFJRDtBQUNGLEdBUkQ7QUFTSCxDQVpEOztRQWlCRSxJLEdBQUEsSTs7Ozs7Ozs7QUMxQkYsSUFBTSxTQUFTLEVBQWY7QUFDQSxJQUFNLFdBQVcsa0JBQWpCO0FBQ0EsSUFBTSxVQUFVO0FBQ2QsWUFBVTtBQURJLENBQWhCOztBQUlBLElBQU0sT0FBTyxTQUFQLElBQU8sR0FBTTtBQUNmLE1BQU0sU0FBUyxTQUFTLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBZjtBQUNBLE1BQU0saUJBQWlCLFNBQWpCLGNBQWlCLEdBQU07QUFDM0IsUUFBTSxZQUFZLFNBQVMsSUFBVCxDQUFjLFNBQWQsSUFBMkIsU0FBUyxlQUFULENBQXlCLFNBQXRFO0FBQ0EsUUFBSSxZQUFZLE1BQWhCLEVBQXdCO0FBQ3RCLGFBQU8sU0FBUCxDQUFpQixHQUFqQixDQUFxQixRQUFRLFFBQTdCO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsYUFBTyxTQUFQLENBQWlCLE1BQWpCLENBQXdCLFFBQVEsUUFBaEM7QUFDRDtBQUNGLEdBUEQ7QUFRQTtBQUNBLFNBQU8sZ0JBQVAsQ0FBd0IsUUFBeEIsRUFBa0MsY0FBbEM7QUFDSCxDQVpEOztRQWlCRSxJLEdBQUEsSTs7Ozs7Ozs7QUN2QkYsSUFBTSxNQUFNLFNBQU4sR0FBTSxDQUFDLENBQUQsRUFBTztBQUNqQixVQUFRLEdBQVIsQ0FBWSxDQUFaO0FBQ0QsQ0FGRDs7UUFNRSxHLEdBQUEsRzs7Ozs7QUNORjs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsaUJBQUksYUFBSjtBQUNBLElBQU0sd0JBQXdCLFNBQXhCLHFCQUF3QixHQUFNO0FBQ2xDLE1BQU0sUUFBUSxTQUFTLGdCQUFULENBQTBCLGNBQTFCLENBQWQ7QUFDQSxLQUFHLE9BQUgsQ0FBVyxJQUFYLENBQWdCLEtBQWhCLEVBQXVCLFVBQUMsSUFBRCxFQUFVO0FBQy9CLFNBQUssZ0JBQUwsQ0FBc0IsT0FBdEIsRUFBK0IsVUFBQyxDQUFELEVBQU87QUFDcEMsUUFBRSxjQUFGO0FBQ0EsVUFBTSxpQkFBaUIsS0FBSyxJQUE1QjtBQUNBLFVBQU0sU0FBUyxTQUFTLGFBQVQsQ0FBdUIsY0FBdkIsQ0FBZjtBQUNBLGNBQVEsR0FBUixDQUFZLHNCQUFaO0FBQ0Esa0NBQWEsTUFBYjtBQUNELEtBTkQ7QUFPRCxHQVJEO0FBU0QsQ0FYRDs7QUFhQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIihmdW5jdGlvbiAocm9vdCwgc21vb3RoU2Nyb2xsKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBTdXBwb3J0IFJlcXVpcmVKUyBhbmQgQ29tbW9uSlMvTm9kZUpTIG1vZHVsZSBmb3JtYXRzLlxuICAvLyBBdHRhY2ggc21vb3RoU2Nyb2xsIHRvIHRoZSBgd2luZG93YCB3aGVuIGV4ZWN1dGVkIGFzIGEgPHNjcmlwdD4uXG5cbiAgLy8gUmVxdWlyZUpTXG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoc21vb3RoU2Nyb2xsKTtcblxuICAvLyBDb21tb25KU1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gc21vb3RoU2Nyb2xsKCk7XG5cbiAgfSBlbHNlIHtcbiAgICByb290LnNtb290aFNjcm9sbCA9IHNtb290aFNjcm9sbCgpO1xuICB9XG5cbn0pKHRoaXMsIGZ1bmN0aW9uKCl7XG4ndXNlIHN0cmljdCc7XG5cbi8vIERvIG5vdCBpbml0aWFsaXplIHNtb290aFNjcm9sbCB3aGVuIHJ1bm5pbmcgc2VydmVyIHNpZGUsIGhhbmRsZSBpdCBpbiBjbGllbnQ6XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gJ29iamVjdCcpIHJldHVybjtcblxuLy8gV2UgZG8gbm90IHdhbnQgdGhpcyBzY3JpcHQgdG8gYmUgYXBwbGllZCBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IHRob3NlXG4vLyBUaGF0IG1lYW5zIG5vIHNtb290aHNjcm9sbCBvbiBJRTkgYW5kIGJlbG93LlxuaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCA9PT0gdm9pZCAwIHx8IHdpbmRvdy5wYWdlWU9mZnNldCA9PT0gdm9pZCAwIHx8IGhpc3RvcnkucHVzaFN0YXRlID09PSB2b2lkIDApIHsgcmV0dXJuOyB9XG5cbi8vIEdldCB0aGUgdG9wIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgaW4gdGhlIGRvY3VtZW50XG52YXIgZ2V0VG9wID0gZnVuY3Rpb24oZWxlbWVudCwgc3RhcnQpIHtcbiAgICAvLyByZXR1cm4gdmFsdWUgb2YgaHRtbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgLi4uIElFIDogMCwgb3RoZXIgYnJvd3NlcnMgOiAtcGFnZVlPZmZzZXRcbiAgICBpZihlbGVtZW50Lm5vZGVOYW1lID09PSAnSFRNTCcpIHJldHVybiAtc3RhcnRcbiAgICByZXR1cm4gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgKyBzdGFydFxufVxuLy8gZWFzZSBpbiBvdXQgZnVuY3Rpb24gdGhhbmtzIHRvOlxuLy8gaHR0cDovL2Jsb2cuZ3Jld2ViLmZyLzIwMTIvMDIvYmV6aWVyLWN1cnZlLWJhc2VkLWVhc2luZy1mdW5jdGlvbnMtZnJvbS1jb25jZXB0LXRvLWltcGxlbWVudGF0aW9uL1xudmFyIGVhc2VJbk91dEN1YmljID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQ8LjUgPyA0KnQqdCp0IDogKHQtMSkqKDIqdC0yKSooMip0LTIpKzEgfVxuXG4vLyBjYWxjdWxhdGUgdGhlIHNjcm9sbCBwb3NpdGlvbiB3ZSBzaG91bGQgYmUgaW5cbi8vIGdpdmVuIHRoZSBzdGFydCBhbmQgZW5kIHBvaW50IG9mIHRoZSBzY3JvbGxcbi8vIHRoZSB0aW1lIGVsYXBzZWQgZnJvbSB0aGUgYmVnaW5uaW5nIG9mIHRoZSBzY3JvbGxcbi8vIGFuZCB0aGUgdG90YWwgZHVyYXRpb24gb2YgdGhlIHNjcm9sbCAoZGVmYXVsdCA1MDBtcylcbnZhciBwb3NpdGlvbiA9IGZ1bmN0aW9uKHN0YXJ0LCBlbmQsIGVsYXBzZWQsIGR1cmF0aW9uKSB7XG4gICAgaWYgKGVsYXBzZWQgPiBkdXJhdGlvbikgcmV0dXJuIGVuZDtcbiAgICByZXR1cm4gc3RhcnQgKyAoZW5kIC0gc3RhcnQpICogZWFzZUluT3V0Q3ViaWMoZWxhcHNlZCAvIGR1cmF0aW9uKTsgLy8gPC0tIHlvdSBjYW4gY2hhbmdlIHRoZSBlYXNpbmcgZnVudGlvbiB0aGVyZVxuICAgIC8vIHJldHVybiBzdGFydCArIChlbmQgLSBzdGFydCkgKiAoZWxhcHNlZCAvIGR1cmF0aW9uKTsgLy8gPC0tIHRoaXMgd291bGQgZ2l2ZSBhIGxpbmVhciBzY3JvbGxcbn1cblxuLy8gd2UgdXNlIHJlcXVlc3RBbmltYXRpb25GcmFtZSB0byBiZSBjYWxsZWQgYnkgdGhlIGJyb3dzZXIgYmVmb3JlIGV2ZXJ5IHJlcGFpbnRcbi8vIGlmIHRoZSBmaXJzdCBhcmd1bWVudCBpcyBhbiBlbGVtZW50IHRoZW4gc2Nyb2xsIHRvIHRoZSB0b3Agb2YgdGhpcyBlbGVtZW50XG4vLyBpZiB0aGUgZmlyc3QgYXJndW1lbnQgaXMgbnVtZXJpYyB0aGVuIHNjcm9sbCB0byB0aGlzIGxvY2F0aW9uXG4vLyBpZiB0aGUgY2FsbGJhY2sgZXhpc3QsIGl0IGlzIGNhbGxlZCB3aGVuIHRoZSBzY3JvbGxpbmcgaXMgZmluaXNoZWRcbi8vIGlmIGNvbnRleHQgaXMgc2V0IHRoZW4gc2Nyb2xsIHRoYXQgZWxlbWVudCwgZWxzZSBzY3JvbGwgd2luZG93XG52YXIgc21vb3RoU2Nyb2xsID0gZnVuY3Rpb24oZWwsIGR1cmF0aW9uLCBjYWxsYmFjaywgY29udGV4dCl7XG4gICAgZHVyYXRpb24gPSBkdXJhdGlvbiB8fCA1MDA7XG4gICAgY29udGV4dCA9IGNvbnRleHQgfHwgd2luZG93O1xuICAgIHZhciBzdGFydCA9IGNvbnRleHQuc2Nyb2xsVG9wIHx8IHdpbmRvdy5wYWdlWU9mZnNldDtcblxuICAgIGlmICh0eXBlb2YgZWwgPT09ICdudW1iZXInKSB7XG4gICAgICB2YXIgZW5kID0gcGFyc2VJbnQoZWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZW5kID0gZ2V0VG9wKGVsLCBzdGFydCk7XG4gICAgfVxuXG4gICAgdmFyIGNsb2NrID0gRGF0ZS5ub3coKTtcbiAgICB2YXIgcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICB3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy53ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICAgICAgZnVuY3Rpb24oZm4pe3dpbmRvdy5zZXRUaW1lb3V0KGZuLCAxNSk7fTtcblxuICAgIHZhciBzdGVwID0gZnVuY3Rpb24oKXtcbiAgICAgICAgdmFyIGVsYXBzZWQgPSBEYXRlLm5vdygpIC0gY2xvY2s7XG4gICAgICAgIGlmIChjb250ZXh0ICE9PSB3aW5kb3cpIHtcbiAgICAgICAgICBjb250ZXh0LnNjcm9sbFRvcCA9IHBvc2l0aW9uKHN0YXJ0LCBlbmQsIGVsYXBzZWQsIGR1cmF0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cuc2Nyb2xsKDAsIHBvc2l0aW9uKHN0YXJ0LCBlbmQsIGVsYXBzZWQsIGR1cmF0aW9uKSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZWxhcHNlZCA+IGR1cmF0aW9uKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0ZXAoKTtcbn1cblxudmFyIGxpbmtIYW5kbGVyID0gZnVuY3Rpb24oZXYpIHtcbiAgICBpZiAoIWV2LmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICBpZiAobG9jYXRpb24uaGFzaCAhPT0gdGhpcy5oYXNoKSB3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgbnVsbCwgdGhpcy5oYXNoKVxuICAgICAgICAvLyB1c2luZyB0aGUgaGlzdG9yeSBhcGkgdG8gc29sdmUgaXNzdWUgIzEgLSBiYWNrIGRvZXNuJ3Qgd29ya1xuICAgICAgICAvLyBtb3N0IGJyb3dzZXIgZG9uJ3QgdXBkYXRlIDp0YXJnZXQgd2hlbiB0aGUgaGlzdG9yeSBhcGkgaXMgdXNlZDpcbiAgICAgICAgLy8gVEhJUyBJUyBBIEJVRyBGUk9NIFRIRSBCUk9XU0VSUy5cbiAgICAgICAgLy8gY2hhbmdlIHRoZSBzY3JvbGxpbmcgZHVyYXRpb24gaW4gdGhpcyBjYWxsXG4gICAgICAgIHZhciBub2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5oYXNoLnN1YnN0cmluZygxKSlcbiAgICAgICAgaWYgKCFub2RlKSByZXR1cm47IC8vIERvIG5vdCBzY3JvbGwgdG8gbm9uLWV4aXN0aW5nIG5vZGVcblxuICAgICAgICBzbW9vdGhTY3JvbGwobm9kZSwgNTAwLCBmdW5jdGlvbiAoZWwpIHtcbiAgICAgICAgICAgIGxvY2F0aW9uLnJlcGxhY2UoJyMnICsgZWwuaWQpXG4gICAgICAgICAgICAvLyB0aGlzIHdpbGwgY2F1c2UgdGhlIDp0YXJnZXQgdG8gYmUgYWN0aXZhdGVkLlxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8vIFdlIGxvb2sgZm9yIGFsbCB0aGUgaW50ZXJuYWwgbGlua3MgaW4gdGhlIGRvY3VtZW50cyBhbmQgYXR0YWNoIHRoZSBzbW9vdGhzY3JvbGwgZnVuY3Rpb25cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaW50ZXJuYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhW2hyZWZePVwiI1wiXTpub3QoW2hyZWY9XCIjXCJdKScpLCBhO1xuICAgIGZvcih2YXIgaT1pbnRlcm5hbC5sZW5ndGg7IGE9aW50ZXJuYWxbLS1pXTspe1xuICAgICAgICBhLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBsaW5rSGFuZGxlciwgZmFsc2UpO1xuICAgIH1cbn0pO1xuXG4vLyByZXR1cm4gc21vb3Roc2Nyb2xsIEFQSVxucmV0dXJuIHNtb290aFNjcm9sbDtcblxufSk7XG4iLCJcbmNvbnN0IHNlbGVjdG9yID0gJ1tkYXRhLWpzLWV2ZW50XSc7XG5jb25zdCBDTEFTU0VTID0ge1xuICBtb3JlOiAnYWEtZXZlbnQtLW1vcmUnLFxufVxuY29uc3QgRE9NX1NFTEVDVE9SUyA9IHtcbiAgdG9nZ2xlOiAnLmFhLWV2ZW50X190b2dnbGUtbW9yZSdcbn1cblxuY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgICBjb25zdCBldmVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcblxuICAgIFtdLmZvckVhY2guY2FsbChldmVudHMsIChldmVudCkgPT4ge1xuICAgICAgY29uc3QgdG9nZ2xlID0gZXZlbnQucXVlcnlTZWxlY3RvcihET01fU0VMRUNUT1JTLnRvZ2dsZSk7XG4gICAgICBpZiAodG9nZ2xlKSB7XG4gICAgICAgIHRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgICAgY29uc3QgbW9yZSA9IGV2ZW50LmNsYXNzTGlzdC50b2dnbGUoQ0xBU1NFUy5tb3JlKTtcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pXG59XG5cblxuXG5leHBvcnQge1xuICBpbml0LFxufVxuIiwiY29uc3QgT0ZGU0VUID0gMTA7XG5jb25zdCBzZWxlY3RvciA9ICdbZGF0YS1qcy1oZWFkZXJdJztcbmNvbnN0IENMQVNTRVMgPSB7XG4gIHNjcm9sbGVkOiAnYWEtaGVhZGVyLS1zY3JvbGxlZCcsXG59XG5cbmNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgY29uc3Qgc2V0SGVhZGVyU3RhdGUgPSAoKSA9PiB7XG4gICAgICBjb25zdCBzY3JvbGxUb3AgPSBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgICAgaWYgKHNjcm9sbFRvcCA+IE9GRlNFVCkge1xuICAgICAgICBoZWFkZXIuY2xhc3NMaXN0LmFkZChDTEFTU0VTLnNjcm9sbGVkKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoQ0xBU1NFUy5zY3JvbGxlZCk7XG4gICAgICB9XG4gICAgfVxuICAgIHNldEhlYWRlclN0YXRlKCk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHNldEhlYWRlclN0YXRlKTtcbn1cblxuXG5cbmV4cG9ydCB7XG4gIGluaXQsXG59XG4iLCJjb25zdCBsb2cgPSAocykgPT4ge1xuICBjb25zb2xlLmxvZyhzKTtcbn07XG5cblxuZXhwb3J0IHtcbiAgbG9nXG59XG4iLCJpbXBvcnQge2xvZ30gZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IHtpbml0IGFzIGluaXRIZWFkZXJ9IGZyb20gJy4vY29tcG9uZW50cy9oZWFkZXInO1xuaW1wb3J0IHtpbml0IGFzIGluaXRFdmVudHN9IGZyb20gJy4vY29tcG9uZW50cy9ldmVudHMnO1xuaW1wb3J0IHNtb290aFNjcm9sbCBmcm9tICdzbW9vdGhzY3JvbGwnO1xuXG5sb2coJ0hlbGxvIFdvcmxkJyk7XG5jb25zdCBpbml0U21vb3RoU2Nyb2xsTGlua3MgPSAoKSA9PiB7XG4gIGNvbnN0IGxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVtocmVmXj1cIiNcIl0nKTtcbiAgW10uZm9yRWFjaC5jYWxsKGxpbmtzLCAobGluaykgPT4ge1xuICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgdGFyZ2V0U2VsZWN0b3IgPSBsaW5rLmhhc2g7XG4gICAgICBjb25zdCB0YXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldFNlbGVjdG9yKTtcbiAgICAgIGNvbnNvbGUubG9nKHNtb290aFNjcm9sbCk7XG4gICAgICBzbW9vdGhTY3JvbGwodGFyZ2V0KTtcbiAgICB9KVxuICB9KVxufVxuXG5pbml0SGVhZGVyKCk7XG5pbml0U21vb3RoU2Nyb2xsTGlua3MoKTtcbmluaXRTbW9vdGhTY3JvbGxMaW5rcygpO1xuaW5pdEV2ZW50cygpO1xuIl19"}